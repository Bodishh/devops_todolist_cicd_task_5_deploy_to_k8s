name: Reusable Deploy to Kind

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      image:
        required: true
        type: string
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true

jobs:
  helm-cd:
    name: Deploy with Helm
    runs-on: ubuntu-latest

    env:
      ENVIRONMENT: ${{ inputs.environment }}
      IMAGE: ${{ inputs.image }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create kind cluster
        run: |
          kind create cluster --name kind-${{ env.ENVIRONMENT }} --config cluster.yml

      - name: Set up KUBECONFIG
        run: |
          kind get kubeconfig --name kind-${{ env.ENVIRONMENT }} > $HOME/.kube/config
          echo "KUBECONFIG=$HOME/.kube/config" >> $GITHUB_ENV

      - name: Set up Helm
        uses: azure/setup-helm@v4

      - name: Pull and load image to Kind
        run: |
          docker pull $IMAGE
          kind load docker-image $IMAGE --name kind-${{ env.ENVIRONMENT }}

      - name: Helm dry-run
        run: |
          helm upgrade --install todoapp ./helm-charts/todoapp \
            --namespace todoapp-${{ env.ENVIRONMENT }} \
            --create-namespace \
            --set image.repository=${{ secrets.DOCKERHUB_USERNAME }}/todoapp \
            --set image.tag=$(echo $IMAGE | cut -d ':' -f2) \
            --values ./helm-charts/todoapp/values.yaml \
            --atomic \
            --dry-run

      - name: Helm deploy
        run: |
          helm upgrade --install todoapp ./helm-charts/todoapp \
            --namespace todoapp-${{ env.ENVIRONMENT }} \
            --create-namespace \
            --set image.repository=${{ secrets.DOCKERHUB_USERNAME }}/todoapp \
            --set image.tag=$(echo $IMAGE | cut -d ':' -f2) \
            --values ./helm-charts/todoapp/values.yaml \
            --atomic
